/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TransactionsLazyImport = createFileRoute('/transactions')()
const SummeryLazyImport = createFileRoute('/summery')()
const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TransactionsLazyRoute = TransactionsLazyImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/transactions.lazy').then((d) => d.Route))

const SummeryLazyRoute = SummeryLazyImport.update({
  id: '/summery',
  path: '/summery',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/summery.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/summery': {
      id: '/summery'
      path: '/summery'
      fullPath: '/summery'
      preLoaderRoute: typeof SummeryLazyImport
      parentRoute: typeof rootRoute
    }
    '/transactions': {
      id: '/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/summery': typeof SummeryLazyRoute
  '/transactions': typeof TransactionsLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/summery': typeof SummeryLazyRoute
  '/transactions': typeof TransactionsLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/summery': typeof SummeryLazyRoute
  '/transactions': typeof TransactionsLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/summery' | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/summery' | '/transactions'
  id: '__root__' | '/' | '/login' | '/summery' | '/transactions'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  SummeryLazyRoute: typeof SummeryLazyRoute
  TransactionsLazyRoute: typeof TransactionsLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  SummeryLazyRoute: SummeryLazyRoute,
  TransactionsLazyRoute: TransactionsLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/summery",
        "/transactions"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/summery": {
      "filePath": "summery.lazy.tsx"
    },
    "/transactions": {
      "filePath": "transactions.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
